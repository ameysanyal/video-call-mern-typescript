name: Deploy video-call-mern-typescript backend

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/workflows/backend-cicd.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.vars.outputs.sha }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"

      - name: Install Dependencies
        working-directory: ./backend
        run: npm install

      - name: Run Tests
        working-directory: ./backend
        run: npm run test

      - name: Get short Git SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image (Backend)
        run: docker build --no-cache -t ameysanyal/video-call-backend:${{ steps.vars.outputs.sha }} ./backend

      - name: Push Docker Image to Docker Hub
        run: docker push ameysanyal/video-call-backend:${{ steps.vars.outputs.sha }}

  deploy:
    needs: build
    runs-on: [self-hosted, backend]
    steps:
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ needs.build.outputs.image_tag }}" >> $GITHUB_ENV

      - name: Pull image from Docker Hub
        run: docker pull ameysanyal/video-call-backend:$IMAGE_TAG

      - name: Delete old container
        run: docker rm -f backend-container || true

      - name: Run Docker Container
        run: |
          docker run -d -p 5001:5001 \
            --name backend-container \
            -e PORT='${{ secrets.PORT }}' \
            -e MONGO_URI='${{ secrets.MONGO_URI }}' \
            -e STREAM_API_KEY='${{ secrets.STREAM_API_KEY }}' \
            -e STREAM_API_SECRET='${{ secrets.STREAM_API_SECRET }}' \
            -e JWT_SECRET_KEY='${{ secrets.JWT_SECRET_KEY }}' \
            -e JWT_EXPIRES_IN='${{ secrets.JWT_EXPIRES_IN }}' \
            -e NODE_ENV='${{ secrets.NODE_ENV }}' \
            ameysanyal/video-call-backend:$IMAGE_TAG

      - name: Remove unused Docker images
        run: docker image prune -af --filter "until=24h"
